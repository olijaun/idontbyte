@startuml

actor "User" as U
participant "Application Service" as AS
participant "Repository" as R
participant "Even   tStore" as ES

U -> AS: withdraw
AS -> R: getAccount("X")
R -> ES: load event stream for X
R <-- ES: events : List<Events>
create "Account X" as A
R ->  A: create(events)
A -> A: apply(events)
R <-- A
R -> A: apply events from EventStream X
R <-- A
AS <-- R: Account: X
AS -> A: withdraw()
A -> A: emit MoneyWithdrawnEvent
AS -> R: save(A)
R -> A: getEmittedEvents() : events
R -> ES: append(events)
R <-- ES
AS <-- R
U <-- AS

@enduml